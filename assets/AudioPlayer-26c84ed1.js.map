{"version":3,"file":"AudioPlayer-26c84ed1.js","sources":["../../src/components/AudioPlayer.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaVolumeUp, FaVolumeMute } from 'react-icons/fa';\nimport { motion } from 'framer-motion'; // Ensure motion is imported\n\n// Add onAutoPlayComplete to props destructuring\nconst AudioPlayer = ({ track, onEnded, autoPlay = false, onAutoPlayComplete }) => {\n  const [isPlaying, setIsPlaying] = useState(false); // Start paused, autoplay handled in onLoadedMetadata\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.7);\n  const [isMuted, setIsMuted] = useState(false);\n  const [audioFrequencyData, setAudioFrequencyData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const audioRef = useRef(null);\n  const animationRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const sourceRef = useRef(null);\n  const isSourceConnected = useRef(false);\n  const autoPlayHandled = useRef(!autoPlay); // Initialize based on initial prop\n\n  // Effect for initializing AudioContext and Analyser (runs once)\n  useEffect(() => {\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    if (!audioContextRef.current) {\n        try {\n            audioContextRef.current = new AudioContext();\n            analyserRef.current = audioContextRef.current.createAnalyser();\n            analyserRef.current.fftSize = 64;\n        } catch (e) {\n            console.error(\"Error creating AudioContext or Analyser:\", e);\n            setError(\"오디오 분석기를 초기화할 수 없습니다.\");\n        }\n    }\n    return () => {\n        if (audioContextRef.current) {\n            audioContextRef.current.close().catch(e => console.error(\"Error closing AudioContext:\", e));\n            audioContextRef.current = null;\n        }\n    };\n  }, []);\n\n  // Effect for connecting the audio source to the analyser (runs when track changes)\n   useEffect(() => {\n    // Reset state when track changes, except isPlaying which is handled by autoPlay logic\n    setCurrentTime(0);\n    setDuration(0);\n    setError(null);\n    autoPlayHandled.current = !autoPlay; // Reset handled flag based on prop for the new track\n\n    if (track && track.audioFile && audioRef.current && audioContextRef.current && analyserRef.current) {\n        if (sourceRef.current && isSourceConnected.current) {\n            try { sourceRef.current.disconnect(); } catch {}\n            sourceRef.current = null;\n            isSourceConnected.current = false;\n        }\n         if (analyserRef.current) {\n             try { analyserRef.current.disconnect(); } catch {}\n         }\n\n        if (audioContextRef.current.state === 'closed') {\n             console.warn(\"AudioContext is closed, cannot create media element source.\");\n             setError(\"오디오 컨텍스트가 닫혔습니다.\");\n             return;\n        }\n\n        if (!isSourceConnected.current) {\n            try {\n                if (audioRef.current.readyState >= 1 || !isSourceConnected.current) {\n                    sourceRef.current = audioContextRef.current.createMediaElementSource(audioRef.current);\n                    sourceRef.current.connect(analyserRef.current);\n                    analyserRef.current.connect(audioContextRef.current.destination);\n                    isSourceConnected.current = true;\n                } else {\n                     console.warn(\"Audio element not ready, delaying connection attempt.\");\n                     const connectWhenReady = () => {\n                         if (audioRef.current && audioContextRef.current && analyserRef.current && !isSourceConnected.current && audioContextRef.current.state !== 'closed') {\n                            try {\n                                sourceRef.current = audioContextRef.current.createMediaElementSource(audioRef.current);\n                                sourceRef.current.connect(analyserRef.current);\n                                analyserRef.current.connect(audioContextRef.current.destination);\n                                isSourceConnected.current = true;\n                            } catch(e) {\n                                console.error(\"Error connecting audio source (on event):\", e);\n                                if (e.name !== 'InvalidStateError') {\n                                    setError(\"오디오 소스를 연결할 수 없습니다.\");\n                                }\n                                isSourceConnected.current = false;\n                            }\n                         }\n                         audioRef.current?.removeEventListener('canplay', connectWhenReady);\n                         audioRef.current?.removeEventListener('loadedmetadata', connectWhenReady);\n                     };\n                     audioRef.current?.addEventListener('canplay', connectWhenReady);\n                     audioRef.current?.addEventListener('loadedmetadata', connectWhenReady);\n                }\n            } catch (e) {\n                console.error(\"Error connecting audio source:\", e);\n                if (e.name !== 'InvalidStateError') {\n                   setError(\"오디오 소스를 연결할 수 없습니다.\");\n                }\n                isSourceConnected.current = false;\n            }\n        }\n    }\n\n    return () => {\n      if (sourceRef.current) {\n        try { sourceRef.current.disconnect(); } catch {}\n        sourceRef.current = null;\n        isSourceConnected.current = false;\n      }\n       if (analyserRef.current) {\n         try { analyserRef.current.disconnect(); } catch {}\n       }\n    };\n   }, [track]); // Re-run only when track changes\n\n  // Update audio frequency data for visualization\n  const updateAudioData = () => {\n    if (analyserRef.current && isPlaying && isSourceConnected.current) {\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      try {\n        analyserRef.current.getByteFrequencyData(dataArray);\n        const normalizedData = Array.from(dataArray).map(value => value / 255);\n        setAudioFrequencyData(normalizedData);\n        animationRef.current = requestAnimationFrame(updateAudioData);\n      } catch (e) {\n         console.error(\"Error getting frequency data:\", e);\n         if (animationRef.current) cancelAnimationFrame(animationRef.current);\n         animationRef.current = null;\n      }\n    } else {\n       if (animationRef.current) cancelAnimationFrame(animationRef.current);\n       animationRef.current = null;\n    }\n  };\n\n  // Removed the useEffect hook that handled autoplay based on track prop change\n\n  // Play/Pause useEffect\n  useEffect(() => {\n    const playAudio = async () => {\n      if (!audioRef.current) return;\n\n      if (audioContextRef.current && audioContextRef.current.state === 'suspended') {\n        try {\n          await audioContextRef.current.resume();\n        } catch (resumeError) {\n          setError(`AudioContext 재개 실패: ${resumeError.message}`);\n          console.error(\"AudioContext resume error:\", resumeError);\n          setIsPlaying(false);\n          return;\n        }\n      }\n\n      try {\n        setError(null);\n        await audioRef.current.play();\n        if (analyserRef.current && isSourceConnected.current && !animationRef.current) {\n           animationRef.current = requestAnimationFrame(updateAudioData);\n        }\n      } catch (playError) {\n        if (playError.name !== 'AbortError') {\n            setError(`오디오 재생 오류: ${playError.message}`);\n            console.error(\"Audio play error:\", playError);\n            setIsPlaying(false);\n        } else {\n             console.warn(\"Audio play() interrupted:\", playError.message);\n        }\n        if (animationRef.current) {\n           cancelAnimationFrame(animationRef.current);\n           animationRef.current = null;\n        }\n      }\n    };\n\n    if (isPlaying) {\n      // Play only if duration is loaded OR readyState indicates it's safe\n      if (duration > 0 || audioRef.current?.readyState >= 2) {\n          playAudio();\n      }\n    } else {\n      audioRef.current?.pause();\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n    }\n  }, [isPlaying, duration]); // Depend on isPlaying and duration\n\n  // Cleanup animation frame on component unmount\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  // Set volume\n  useEffect(() => {\n    if (audioRef.current) {\n       audioRef.current.volume = isMuted ? 0 : volume;\n    }\n  }, [volume, isMuted]);\n\n  // Handle audio metadata loaded - Added autoplay logic here\n  const onLoadedMetadata = () => {\n    if (audioRef.current) {\n        const newDuration = audioRef.current.duration;\n        if (isFinite(newDuration)) {\n            setDuration(newDuration);\n            setError(null);\n            // Trigger autoplay if prop is set and not already handled for this load\n            if (autoPlay && !autoPlayHandled.current) {\n                setIsPlaying(true); // This will trigger the play/pause useEffect\n                autoPlayHandled.current = true;\n                if (typeof onAutoPlayComplete === 'function') {\n                    onAutoPlayComplete(); // Notify parent\n                }\n            }\n        } else {\n            setError(\"오디오 길이를 가져올 수 없습니다.\");\n            setDuration(0);\n        }\n    }\n  };\n\n  // Handle time update\n  const onTimeUpdate = () => {\n     if (audioRef.current) {\n        setCurrentTime(audioRef.current.currentTime);\n     }\n  };\n\n  // Toggle play/pause\n  const togglePlay = () => {\n    if (audioContextRef.current && audioContextRef.current.state === 'suspended') {\n       audioContextRef.current.resume().catch(e => {\n           console.error(\"Error resuming AudioContext:\", e);\n           setError(\"오디오 컨텍스트 재개 실패\");\n       });\n    }\n    setIsPlaying(!isPlaying);\n    setError(null);\n    // User interaction overrides autoplay intent\n    autoPlayHandled.current = true; // Mark as handled even if pausing\n    if (typeof onAutoPlayComplete === 'function') {\n        onAutoPlayComplete(); // Notify parent\n    }\n  };\n\n  // Handle seek\n  const handleSeek = (e) => {\n    if (!audioRef.current || isNaN(duration) || duration <= 0) return;\n    const progressBar = e.currentTarget;\n    const rect = progressBar.getBoundingClientRect();\n    const seekTime = ((e.clientX - rect.left) / rect.width) * duration;\n    audioRef.current.currentTime = seekTime;\n    setCurrentTime(seekTime);\n  };\n\n  // Handle volume change\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    setIsMuted(newVolume === 0);\n  };\n\n  // Toggle mute\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n  };\n\n  // Format time (seconds to MM:SS)\n  const formatTime = (time) => {\n    if (isNaN(time) || time === Infinity || time < 0) return '00:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"bg-primary bg-opacity-30 backdrop-blur-sm p-4 rounded-lg\">\n      <audio\n        key={track?.audioFile} // Force re-render when track changes\n        ref={audioRef}\n        src={track?.audioFile}\n        onLoadedMetadata={onLoadedMetadata}\n        onTimeUpdate={onTimeUpdate}\n        onEnded={onEnded}\n        onError={(e) => {\n            console.error(\"Audio Element Error:\", e.target.error);\n            setError(\"오디오 파일을 로드하거나 재생할 수 없습니다.\");\n            setIsPlaying(false);\n        }}\n        crossOrigin=\"anonymous\" // Important for MediaElementSourceNode\n      />\n\n      {error && (\n        <div className=\"bg-accent-magenta/20 border border-accent-magenta text-accent-magenta p-3 rounded-md mb-4 text-sm\">\n          {error}\n        </div>\n      )}\n\n      <div className={`flex items-center mb-4 ${error ? 'opacity-50 pointer-events-none' : ''}`}>\n        <button\n          onClick={togglePlay}\n          className=\"bg-accent-magenta hover:bg-opacity-80 text-white rounded-full w-10 h-10 flex items-center justify-center mr-4 focus:outline-none shadow-md hover:shadow-neon-magenta\"\n          disabled={!!error || (!track?.audioFile)}\n        >\n          {isPlaying ? <FaPause /> : <FaPlay />}\n        </button>\n\n        <div className=\"flex-1\">\n          <h3 className=\"text-white font-blender text-lg\">{track?.title}</h3>\n          <p className=\"text-gray-400 text-sm\">{track?.theme}</p>\n        </div>\n      </div>\n\n      {/* Restored Audio visualization section */}\n       <div className={`h-20 mb-4 flex items-end justify-center space-x-1 overflow-hidden ${error ? 'opacity-30' : ''}`}>\n         {(audioFrequencyData.length > 0 && !error) ? (\n           audioFrequencyData.map((value, index) => (\n             <motion.div\n               key={index}\n               className=\"w-1.5 rounded-t\"\n               style={{\n                 background: `linear-gradient(to top, var(--color-accent-magenta), var(--color-accent-blue))`,\n                 boxShadow: `0 0 2px rgba(33, 93, 255, 0.6), 0 0 5px rgba(180, 60, 255, 0.4)`,\n                 height: `${Math.max(2, value * 80)}%`, // Use percentage height, ensure min height\n                 transformOrigin: 'bottom',\n                 transition: 'height 0.05s ease-out' // Animate height directly\n               }}\n             />\n           ))\n         ) : (\n           Array.from({ length: 32 }).map((_, index) => (\n             <div key={index} className=\"w-1.5 h-1 bg-gray-700 rounded-t opacity-50\"></div>\n           ))\n         )}\n       </div>\n\n      {/* Progress bar */}\n      <div className={`mb-2 ${error ? 'opacity-50 pointer-events-none' : ''}`}>\n        <div\n          className=\"h-2 bg-gray-700 rounded-full cursor-pointer relative overflow-hidden group\"\n          onClick={!error ? handleSeek : undefined}\n        >\n          <div\n            className=\"absolute top-0 left-0 h-full bg-gradient-to-r from-accent-magenta to-accent-blue transition-all duration-100 ease-linear\"\n            style={{ width: `${(currentTime / duration) * 100}%` }}\n          />\n           <div className=\"absolute top-0 left-0 h-full bg-accent-blue blur opacity-0 group-hover:opacity-50 transition-opacity duration-200\"\n             style={{ width: `${(currentTime / duration) * 100}%` }}/>\n        </div>\n        <div className=\"flex justify-between text-xs text-gray-400 mt-1\">\n          <span>{formatTime(currentTime)}</span>\n          <span>{formatTime(duration)}</span>\n        </div>\n      </div>\n\n      {/* Volume control */}\n      <div className={`flex items-center ${error ? 'opacity-50 pointer-events-none' : ''}`}>\n        <button\n          onClick={!error ? toggleMute : undefined}\n          className=\"text-gray-400 hover:text-accent-blue mr-2 focus:outline-none transition-colors\"\n          disabled={!!error}\n        >\n          {isMuted ? <FaVolumeMute /> : <FaVolumeUp />}\n        </button>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={isMuted ? 0 : volume}\n          onChange={handleVolumeChange}\n          className=\"w-24 h-1 bg-gray-700 rounded-full appearance-none cursor-pointer accent-accent-magenta\"\n          disabled={!!error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"names":["AudioPlayer","track","onEnded","autoPlay","onAutoPlayComplete","isPlaying","setIsPlaying","useState","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","isMuted","setIsMuted","audioFrequencyData","setAudioFrequencyData","error","setError","audioRef","useRef","animationRef","audioContextRef","analyserRef","sourceRef","isSourceConnected","autoPlayHandled","useEffect","AudioContext","window","webkitAudioContext","current","createAnalyser","fftSize","e","close","catch","audioFile","disconnect","state","readyState","createMediaElementSource","connect","destination","connectWhenReady","name","_a","removeEventListener","_b","addEventListener","updateAudioData","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteFrequencyData","normalizedData","Array","from","map","value","requestAnimationFrame","cancelAnimationFrame","async","resume","resumeError","message","play","playError","pause","formatTime","time","isNaN","Infinity","minutes","Math","floor","seconds","toString","padStart","jsxs","className","children","jsxRuntimeExports","jsx","ref","src","onLoadedMetadata","newDuration","isFinite","onTimeUpdate","onError","crossOrigin","onClick","disabled","FaPause","FaPlay","title","theme","length","index","motion","div","style","background","boxShadow","height","max","transformOrigin","transition","_","rect","currentTarget","getBoundingClientRect","seekTime","clientX","left","width","FaVolumeMute","FaVolumeUp","type","min","step","onChange","newVolume","parseFloat","target"],"mappings":"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"}